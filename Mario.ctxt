#BlueJ class context
comment0.params=
comment0.target=Mario()
comment1.params=
comment1.target=boolean\ scroll()
comment1.text=\r\n\ determine\ if\ the\ world\ scroll\ or\ not\r\n
comment10.params=
comment10.target=void\ animateRight()
comment10.text=\r\n\ Performs\ the\ moving\ to\ the\ right\ animation.\r\n
comment11.params=
comment11.target=void\ moveLeft()
comment11.text=\r\n\ Moves\ Mario\ to\ the\ left.\ The\ distance\ he\ covers\ is\ equal\ to\ his\ speed.\r\n\ Performs\ the\ moving\ to\ the\ left\ animation\ (uses\ animateLeft\ method)\r\n
comment12.params=
comment12.target=void\ animateLeft()
comment12.text=\r\n\ Performs\ the\ moving\ to\ the\ right\ animation.\r\n
comment13.params=jumpStrength
comment13.target=void\ jump(int)
comment13.text=\r\n\ Makes\ Mario\ jump.\ Increases\ his\ vertical\ (initial)\ speed\ and\ gravity\ slowly\ brings\ him\ down.\r\n\ User\ specifies\ the\ initial\ speed\r\n\ @param\ jumpStrength\ -\ initial\ speed\ (positive\ number)\r\n
comment14.params=
comment14.target=void\ jump()
comment14.text=\r\n\ Makes\ Mario\ jump.\ Increases\ his\ vertical\ (initial)\ speed\ and\ gravity\ slowly\ brings\ him\ down.\r\n\ User\ specifies\ the\ initial\ speed\r\n\ @param\ jumpStrength\ -\ initial\ speed\ (positive\ number)\r\n
comment15.params=
comment15.target=void\ spawn()
comment16.params=
comment16.target=void\ checkScroll()
comment16.text=\r\n\ Checks\ if\ any\ of\ the\ object\ that\ on\ the\ edge\ of\ the\ map\ is\ on\ the\ screen,\ if\ so\ stops\ scrolling\ in\r\n\ different\ directions\ depending\ on\ the\ object.\r\n
comment17.params=
comment17.target=void\ checkHitEndOfWorld()
comment17.text=\r\n\ Checks\ if\ Mario\ is\ at\ the\ end\ of\ the\ world.\r\n\ Does\ not\ let\ Mario\ through.\r\n
comment18.params=x\ y
comment18.target=void\ moveScreen(int,\ int)
comment18.text=\r\n\ Moves\ camera\ across\ the\ screen\ depending\ on\ Mario's\ location\r\n
comment19.params=
comment19.target=void\ checkFall()
comment19.text=\r\n\ Checks\ to\ see\ if\ Mario\ is\ falling\ and\ performs\ functions\ based\ on\ the\ resutls.\ \r\n\ If\ Mario\ is\ not\ on\ the\ ground\ (and\ not\ on\ a\ tree),\ performs\ gravity\ on\ Mario\ and\ makes\ him\ free\ fall.\r\n\ If\ Mario\ is\ on\ the\ ground,\ sets\ his\ vertical\ speed\ to\ 0.\r\n\ Uses\ the\ onGround\ and\ fall\ methods.\r\n
comment2.params=
comment2.target=void\ nextLevel()
comment2.text=\r\n\ Goes\ to\ the\ next\ level\ or\ mini\ level\ when\ on\ top\ of\ a\ tube\r\n
comment20.params=
comment20.target=void\ fallOutOfWorld()
comment20.text=\r\n\ Checks\ if\ Mario\ falls\ out\ of\ the\ screen.\r\n\ Re-locates\ Mario\ at\ the\ begining\ of\ the\ level.\r\n
comment21.params=
comment21.target=boolean\ onGround()
comment21.text=\r\n\ Checks\ to\ see\ if\ Mario\ is\ on\ the\ ground\ or\ not.\r\n\ @return\ true\ -\ Mario\ is\ on\ the\ ground,\ false\ -\ Mario\ is\ not\ on\ the\ ground\r\n
comment22.params=ground
comment22.target=void\ moveToGround(greenfoot.Actor)
comment22.text=\r\n\ Moves\ Mario\ to\ be\ located\ right\ above\ the\ ground.\ More\ visually\ appealing.\r\n\ @param\ ground\ -\ the\ ground\ actor\ that\ Mario\ is\ on\r\n
comment23.params=
comment23.target=void\ fall()
comment23.text=\r\n\ Enacts\ gravity\ on\ mario\ and\ all\ the\ enemies.\r\n
comment24.params=
comment24.target=boolean\ platformAbove()
comment24.text=\r\n\ Checks\ to\ see\ if\ there\ is\ a\ platform\ above\ mario.\r\n\ @return\ true\ -\ there\ is,\ false\ -\ there\ isn't\r\n
comment25.params=ceiling
comment25.target=void\ bopHead(greenfoot.Actor)
comment25.text=\r\n\ Moves\ Mario\ to\ be\ located\ right\ undernath\ the\ platform\ (he\ hit).\ More\ visually\ appealing.\r\n\ @param\ celing\ -\ the\ ceiling\ actor\ that\ Mario\ hit\r\n
comment26.params=
comment26.target=boolean\ checkRightWalls()
comment26.text=\r\n\ Checks\ to\ see\ if\ there\ is\ wall\ to\ the\ right\ of\ Mario.\r\n\ If\ there\ is,\ blocks\ Mario\ from\ passing.\r\n\ Uses\ stopByRightWall\ method.\r\n\ @return\ true\ -\ there\ is\ a\ wall\ to\ the\ right,\ false-\ there\ isn't\ a\ wall\ to\ the\ right\r\n
comment27.params=rightWall
comment27.target=void\ stopByRightWall(greenfoot.Actor)
comment27.text=\r\n\ Blocks\ Mario\ from\ passing\ the\ wall\ to\ the\ right\ of\ him.\r\n\ @param\ rightWall\ -\ the\ wall\ to\ the\ right\ of\ Mario\r\n
comment28.params=
comment28.target=boolean\ checkLeftWalls()
comment28.text=\r\n\ Checks\ to\ see\ if\ there\ is\ wall\ to\ the\ left\ of\ Mario.\r\n\ If\ there\ is,\ blocks\ Mario\ from\ passing.\r\n\ Uses\ stopByLeftWall\ method.\r\n\ @return\ true\ -\ there\ is\ a\ wall\ to\ the\ left,\ false-\ there\ isn't\ a\ wall\ to\ the\ left\r\n
comment29.params=leftWall
comment29.target=void\ stopByLeftWall(greenfoot.Actor)
comment29.text=\r\n\ Blocks\ Mario\ from\ passing\ the\ wall\ to\ the\ right\ of\ him.\r\n\ @param\ rightWall\ -\ the\ wall\ to\ the\ right\ of\ Mario\r\n
comment3.params=world
comment3.target=void\ addedToWorld(greenfoot.World)
comment3.text=\r\n\ Runs\ when\ Mario\ is\ added\ in\ the\ world.\r\n\ Saves\ all\ Mario's\ images\ in\ character\ array.\r\n
comment30.params=
comment30.target=void\ carrying()
comment30.text=\r\n\ Moves\ Mario\ according\ the\ to\ teleporter's\ movement\ that\ Mario\ is\ on.\r\n
comment31.params=
comment31.target=void\ checkTree()
comment32.params=
comment32.target=void\ lockOnTree()
comment32.text=\r\n\ Lock\ Mario\ on\ the\ tree.\r\n
comment33.params=vSpeed
comment33.target=void\ setSpeed(int)
comment33.text=\r\n\ Sets\ Mario's\ vertical\ speed.\r\n\ Called\ by\ Jumper\ class.\r\n\ @param\ vSpeed\ -\ the\ new\ vertical\ speed\ \r\n
comment34.params=
comment34.target=int\ getJumpStrength()
comment34.text=\r\n\ Returns\ the\ current\ jump\ strength\ of\ Mario\r\n\ @return\ -\ the\ value\ of\ the\ jump\ strength\ of\ Mario\r\n
comment35.params=
comment35.target=int\ getLives()
comment35.text=\r\n\ Gets\ the\ lives\ of\ Mario\r\n
comment36.params=
comment36.target=void\ loseALife()
comment36.text=\r\n\ Mario\ loses\ a\ life.\ If\ it\ was\ his\ last\ life,\ he\ goes\ to\ the\ title\ page\r\n
comment37.params=
comment37.target=void\ invincibleAnimation()
comment37.text=\r\n\ Animation\ runs\ to\ indicate\ Mario\ is\ under\ the\ Invincible\ efect.\r\n
comment38.params=bi
comment38.target=java.awt.image.BufferedImage\ deepCopy(java.awt.image.BufferedImage)
comment38.text=\r\n\ Returns\ a\ new\ unrelated\ buffered\ image\ of\ the\ buffered\ image\ that\ was\ passed\ by\ reference.\r\n\ Called\ by\ the\ addImage\ method.\r\n\ \r\n\ @param\ bi\ \ \ \ The\ BufferedImage\ (passed\ by\ reference)\ to\ change.\r\n\ @return\ \ BufferedImage\ Returns\ the\ BufferedImage\ that\ is\ used\ for\ undoing.\r\n
comment39.params=bi\ x\ y
comment39.target=void\ setRGBValues(java.awt.image.BufferedImage,\ int,\ int)
comment39.text=\r\n\ Stores\ the\ RGB\ values\ in\ RGB\ variables\ based\ on\ the\ given\ pixel.\r\n\ \r\n\ @param\ bi\ -\ buffered\ image\ the\ brownish\ layer\ will\ be\ add\ on\r\n\ @param\ x\ -\ x-coordinate\ of\ the\ pixel\r\n\ @param\ y\ -\ y-coordinate\ of\ the\ pixel\r\n
comment4.params=
comment4.target=void\ act()
comment4.text=\r\n\ Act\ -\ do\ whatever\ the\ Mario\ wants\ to\ do.\ This\ method\ is\ called\ whenever\r\n\ the\ 'Act'\ or\ 'Run'\ button\ gets\ pressed\ in\ the\ environment.\r\n
comment40.params=rgbaValue
comment40.target=int[]\ unpackPixel(int)
comment40.text=\r\n\ Takes\ in\ an\ rgb\ value\ -\ the\ kind\ that\ is\ returned\ from\ BufferedImage's\r\n\ getRGB()\ method\ -\ and\ returns\ 4\ integers\ for\ easy\ manipulation.\r\n\ \r\n\ By\ Jordan\ Cohen\r\n\ Version\ 0.2\r\n\ \r\n\ @param\ rgbaValue\ The\ value\ of\ a\ single\ pixel\ as\ an\ integer,\ representing<br>\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ 8\ bits\ for\ red,\ green\ and\ blue\ and\ 8\ bits\ for\ alpha\:<br>\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ <pre>alpha\ \ \ red\ \ \ \ \ green\ \ \ blue</pre>\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ <pre>00000000000000000000000000000000</pre>\r\n\ @return\ int[4]\ \ \ Array\ containing\ 4\ shorter\ ints<br>\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ <pre>0\ \ \ \ \ \ \ 1\ \ \ \ \ \ \ 2\ \ \ \ \ \ \ 3</pre>\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ <pre>alpha\ \ \ red\ \ \ \ \ green\ \ \ blue</pre>\r\n
comment41.params=r\ g\ b\ a
comment41.target=int\ packagePixel(int,\ int,\ int,\ int)
comment41.text=\r\n\ Takes\ in\ a\ red,\ green,\ blue\ and\ alpha\ integer\ and\ uses\ bit-shifting\r\n\ to\ package\ all\ of\ the\ data\ into\ a\ single\ integer.\r\n\ \r\n\ @param\ \ \ int\ red\ value\ (0-255)\r\n\ @param\ \ \ int\ green\ value\ (0-255)\r\n\ @param\ \ \ int\ blue\ value\ (0-255)\r\n\ @param\ \ \ int\ alpha\ value\ (0-255)\r\n\ \r\n\ @return\ int\ \ Integer\ representing\ 32\ bit\ integer\ pixel\ ready\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ for\ BufferedImage\r\n
comment42.params=newBi
comment42.target=greenfoot.GreenfootImage\ createGreenfootImageFromBI(java.awt.image.BufferedImage)
comment42.text=\r\n\ Converts\ a\ buffered\ image\ to\ a\ greenfoot\ image.\r\n\ \r\n\ @param\ newBi-\ buffered\ image\ to\ be\ converted\r\n\ @return\ GreenfootImage\ -\ a\ greenfoot\ image\ of\ the\ buffered\ image\r\n
comment43.params=
comment43.target=void\ setInvincibleAnimationOn()
comment44.params=
comment44.target=void\ setInvincibleAnimationOff()
comment45.params=
comment45.target=InventoryObject\ checkHit()
comment46.params=
comment46.target=void\ fly()
comment47.params=
comment47.target=void\ moveInFlight()
comment47.text=\r\n\ Only\ valid\ for\ flight\r\n
comment48.params=
comment48.target=void\ fireAbility()
comment49.params=
comment49.target=void\ fireActions()
comment5.params=
comment5.target=void\ checkKey()
comment5.text=\r\n\ Checks\ if\ one\ of\ the\ arrow\ keys\ is\ pressed.\r\n\ Performs\ the\ function\ of\ the\ pressed\ key.\r\n
comment50.params=
comment50.target=void\ openChasm()
comment51.params=
comment51.target=void\ chasmActions()
comment52.params=
comment52.target=void\ turnInvincible()
comment52.text=\r\n\ Ramy\ this\ is\ the\ invinicbility\ method\ that\ I\ call\ from\ the\ inventory\ class\r\n
comment53.params=
comment53.target=boolean\ isInvincible()
comment54.params=
comment54.target=void\ invinciblePowers()
comment54.text=\r\n\ Ramy\ this\ method\ is\ a\ method\ that\ can\ be\ used\ to\ manipulate\ mario\ while\ he\ is\ invincible\r\n\ it\ is\ also\ called\ int\ he\ act()\ method\ above,\ IT\ MUST\ BE\ HERE\ FOR\ THIS\ TO\ WORK\r\n
comment55.params=
comment55.target=void\ resetPowers()
comment56.params=
comment56.target=boolean\ getUsingPower()
comment57.params=
comment57.target=void\ checkLives()
comment58.params=
comment58.target=void\ updateLives()
comment6.params=
comment6.target=void\ climbUp()
comment6.text=\r\n\ Moves\ mario\ up\ (on\ the\ tree).\ Distance\ he\ moves\ up\ is\ equal\ to\ his\ speed.\r\n\ Performs\ climb\ animation\ (uses\ climbAimation).\r\n
comment7.params=
comment7.target=void\ climbDown()
comment7.text=\r\n\ Moves\ mario\ down\ (on\ the\ tree).\ Distance\ he\ moves\ down\ is\ equal\ to\ his\ speed.\r\n\ Performs\ climb\ animation\ (uses\ climbAimation).\r\n
comment8.params=
comment8.target=void\ climbAnimation()
comment8.text=\r\n\ Perfoms\ the\ climb\ animation\r\n
comment9.params=
comment9.target=void\ moveRight()
comment9.text=\r\n\ Moves\ Mario\ to\ the\ right.\ The\ distance\ he\ covers\ is\ equal\ to\ his\ speed.\r\n\ Performs\ the\ moving\ to\ the\ right\ animation\ (uses\ animateRight\ method).\r\n
numComments=59
