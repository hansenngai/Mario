#BlueJ class context
comment0.params=
comment0.target=DanielWorld()
comment0.text=\r\n\ Creates\ the\ world\ starting\ from\ Start\ Screen.\r\n
comment1.params=level
comment1.target=DanielWorld(int)
comment1.text=\r\n\ Creates\ the\ world\ with\ the\ level\ inputted\r\n\ @param\ level\ The\ level\ selected\r\n
comment10.params=
comment10.target=Block\ rightMostObject()
comment10.text=\r\n\ get\ the\ one\ object\ with\ the\ highest\ x\ coordinate\r\n
comment11.params=
comment11.target=boolean\ getScroll()
comment11.text=\r\n\ @return\ true\ if\ the\ world\ is\ able\ to\ scroll\r\n
comment12.params=
comment12.target=int\ getLevel()
comment12.text=\r\n\ @return\ the\ current\ level\r\n
comment13.params=
comment13.target=Block\ getRightMostObject()
comment13.text=\r\n\ @return\ the\ object\ with\ the\ highest\ x\ coordinate\r\n
comment14.params=
comment14.target=Block\ getHighestObject()
comment14.text=\r\n\ @return\ the\ object\ with\ the\ lowest\ y\ coordinate\r\n
comment15.params=
comment15.target=Block\ getLowestObject()
comment15.text=\r\n\ @return\ the\ object\ with\ the\ highest\ y\ coordinate\r\n
comment16.params=
comment16.target=Block\ getLeftMostObject()
comment16.text=\r\n\ @return\ the\ object\ with\ the\ lowest\ x\ coordinate\r\n
comment17.params=path\ textLine\ appendToFile
comment17.target=void\ writeToFile(java.lang.String,\ java.lang.String,\ boolean)
comment17.text=\r\n\ Writes\ a\ text\ file\ to\ save\ the\ information.\r\n\ Whenever\ the\ user\ writes\ in\ the\ text\ file,\ the\ data\ is\ stored\ on\ a\ seperate\ line\ each\ time.\r\n\ The\ user\ names\ the\ file\ along\ with\ the\ option\ of\ modifing\ an\ exsisting\ file\ with\ the\ same\ name\ or\ creatin\r\n\ a\ new\ one.\r\n\ @param\ path\ -\ the\ name\ of\ the\ file\r\n\ @param\ textLine\ -\ text\r\n\ @param\ \ appentToFile\ -\ true\ -\ saves\ the\ text\ on\ an\ already\ exisisting\ file\ (continues\ on\ the\ last\ line),\ false\ -\ make\ a\ new\ file\ and\ save\ the\ text\ in\ it\r\n
comment18.params=type\ x\ y
comment18.target=void\ addElements(java.lang.String,\ int,\ int)
comment18.text=\r\n\ Adds\ any\ actor\ in\ the\ world\ except\ the\ basis\ blocks.\r\n\ The\ user\ has\ to\ specify\ the\ type\ of\ actor\ and\ its\ coordinates\ on\ the\ screen\r\n\ @param\ type\ -\ the\ type\ of\ actor\ (name\ of\ its\ class)\r\n\ @param\ x\ -\ the\ x-coordinate\r\n\ @param\ y\ -\ the\ y-coordinate\r\n
comment19.params=fileName
comment19.target=void\ loadWorld(java.lang.String)
comment19.text=\r\n\ Constructs\ the\ world\ using\ information\ from\ a\ textfile.\r\n\ All\ the\ actors\ and\ their\ x\ and\ y\ location\ are\ add\ in\ the\ world.\r\n\ Uses\ addBlock\ and\ addElements\ methods\r\n
comment2.params=
comment2.target=void\ act()
comment20.params=
comment20.target=void\ saveWorld()
comment20.text=\r\n\ Saves\ the\ current\ world\ and\ the\ location\ of\ all\ the\ objects.\r\n\ Saves\ the\ teleporter's\ movement\ back\ and\ forth.\r\n\ Saves\ the\ data\ in\ a\ new\ text\ file\ every\ time\ (automatically\ deletes\ the\ old\ one).\r\n\ Uses\ writeToFile\ method\r\n
comment21.params=number\ x\ y
comment21.target=void\ addBlock(int,\ int,\ int)
comment22.params=
comment22.target=void\ started()
comment22.text=\r\nPlays\ the\ background\ music.\ Gets\ called\ to\ continue\ playing\ the\ music\ when\ it\ stops\ by\ the\ stopped\ method\r\n
comment23.params=
comment23.target=void\ stopped()
comment23.text=\r\n\ Pauses\ the\ background\ music\r\n
comment24.params=
comment24.target=void\ setCanPlay()
comment25.params=
comment25.target=void\ stopMusic()
comment3.params=width\ height\ Level\ scroll
comment3.target=DanielWorld(int,\ int,\ java.lang.String,\ boolean)
comment3.text=\r\n\ @param\ Level\ the\ level\ from\ a\ textfile\ that\ your\ want\ to\ load\r\n\ @param\ scroll\ true\ if\ you\ want\ the\ world\ to\ scroll\r\n\ \r\n
comment4.params=x\ y
comment4.target=void\ cameraMove(int,\ int)
comment4.text=\r\n\ This\ method\ moves\ the\ screen\ around\ the\ world\ by\ moving\ all\ scrolling\ actors\ around\r\n\ \r\n\ @param\ x\ The\ amount\ horizontal\ pixels\ you\ want\ to\ move\ the\ screen\r\n\ @param\ y\ The\ amount\ vertical\ pixels\ you\ want\ to\ move\ the\ screen\r\n\ \r\n
comment5.params=fileName
comment5.target=java.lang.String[][]\ loadMap(java.lang.String)
comment5.text=\r\n\ This\ method\ reads\ a\ text\ file\ that\ is\ designed\ to\ create\ a\ map\ and\ load\ the\ content\ in\ the\ text\ file\ into\ a\ 2-D\ array\r\n\ \r\n\ @param\ fileName\ Name\ of\ the\ text\ file\ to\ be\ loaded\r\n
comment6.params=map
comment6.target=void\ generateMap(java.lang.String[][])
comment6.text=\r\n\ This\ method\ uses\ the\ map\ created\ from\ the\ loadMap\ method\ and\ adds\ the\ Object\ into\ the\ world\ based\ on\ each\ element\ in\ the\ 2-D\ array\r\n\ \r\n\ @param\ map\ The\ 2-D\ array\ of\ the\ map\r\n
comment7.params=
comment7.target=Block\ leftMostObject()
comment7.text=\r\n\ get\ the\ one\ object\ with\ the\ lowest\ x\ coordinate\r\n
comment8.params=
comment8.target=Block\ upperMostObject()
comment8.text=\r\n\ get\ the\ one\ object\ with\ the\ lowest\ y\ coordinate\r\n
comment9.params=
comment9.target=Block\ bottomMostObject()
comment9.text=\r\n\ get\ the\ one\ object\ with\ the\ highest\ y\ coordinate\r\n
numComments=26
